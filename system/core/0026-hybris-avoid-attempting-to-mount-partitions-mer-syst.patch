From 0671793a09083e01156fa20c8a269aff697da52b Mon Sep 17 00:00:00 2001
From: Franz-Josef Haider <franz.haider@jolla.com>
Date: Wed, 6 Jun 2018 09:28:27 +0200
Subject: [PATCH 26/40] (hybris) avoid attempting to mount partitions,
 mer/systemd handles this

Even partitions weren't mounted by this previously it still would produce an
error and further boot.

Change-Id: Icaea2cd8d145d8205f4a130119aedbd2720c868d
---
 init/builtins.cpp | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/init/builtins.cpp b/init/builtins.cpp
index 25f324ce5..f98f37ed5 100644
--- a/init/builtins.cpp
+++ b/init/builtins.cpp
@@ -518,6 +518,7 @@ static Result<int> handle_fstab(const std::string& fstabfile, std::function<int(
     }
 }
 
+#if 0
 /* mount_fstab
  *
  *  Call fs_mgr_mount_all() to mount the given fstab
@@ -531,6 +532,7 @@ static Result<int> mount_fstab(const std::string& fstabfile, int mount_mode) {
         return ret;
     });
 }
+#endif
 
 /* umount_fstab
  *
@@ -632,7 +634,7 @@ static Result<Success> do_mount_all(const BuiltinArguments& args) {
     bool import_rc = true;
     bool queue_event = true;
     int mount_mode = MOUNT_MODE_DEFAULT;
-    const auto& fstabfile = args[1];
+    //const auto& fstabfile = args[1];
     std::size_t path_arg_end = args.size();
     const char* prop_post_fix = "default";
 
@@ -652,10 +654,15 @@ static Result<Success> do_mount_all(const BuiltinArguments& args) {
 
     std::string prop_name = "ro.boottime.init.mount_all."s + prop_post_fix;
     android::base::Timer t;
+
+#if 0
     auto mount_fstab_return_code = mount_fstab(fstabfile, mount_mode);
     if (!mount_fstab_return_code) {
         return Error() << "mount_fstab() failed " << mount_fstab_return_code.error();
     }
+#endif
+
+    auto mount_fstab_return_code = WEXITSTATUS(0);
     property_set(prop_name, std::to_string(t.duration().count()));
 
     if (import_rc) {
@@ -663,6 +670,8 @@ static Result<Success> do_mount_all(const BuiltinArguments& args) {
         import_late(args.args, 2, path_arg_end);
     }
 
+    queue_event = false; // hybris does trigger_late_start.
+
     if (queue_event) {
         /* queue_fs_event will queue event based on mount_fstab return code
          * and return processed return code*/
-- 
2.23.0

