From 22ca067d2f9d82d82b7be22431a3fab8c103dbbf Mon Sep 17 00:00:00 2001
From: Simonas Leleiva <simonas.leleiva@meramo.co.uk>
Date: Wed, 18 Apr 2018 19:00:03 +0200
Subject: [PATCH 4/5] (hybris) Allow surfaceflinger to be started from
 SailfishOS.

Change-Id: Ibaecd8d27524bbb0d3bc7b40017bf92736b8629d
Signed-off-by: Simonas Leleiva <simonas.leleiva@meramo.co.uk>
---
 services/surfaceflinger/StartPropertySetThread.cpp | 5 +++--
 services/surfaceflinger/SurfaceFlinger.cpp         | 6 +++---
 services/surfaceflinger/surfaceflinger.rc          | 1 +
 3 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/services/surfaceflinger/StartPropertySetThread.cpp b/services/surfaceflinger/StartPropertySetThread.cpp
index db82772f4..27cc95abc 100644
--- a/services/surfaceflinger/StartPropertySetThread.cpp
+++ b/services/surfaceflinger/StartPropertySetThread.cpp
@@ -29,10 +29,11 @@ status_t StartPropertySetThread::Start() {
 bool StartPropertySetThread::threadLoop() {
     // Set property service.sf.present_timestamp, consumer need check its readiness
     property_set(kTimestampProperty, mTimestampPropertyValue ? "1" : "0");
+    // Don't start the Android bootanimation in SFOS even if SurfaceFlinger is used.
     // Clear BootAnimation exit flag
-    property_set("service.bootanim.exit", "0");
+    //property_set("service.bootanim.exit", "0");
     // Start BootAnimation if not started
-    property_set("ctl.start", "bootanim");
+    //property_set("ctl.start", "bootanim");
     // Exit immediately
     return false;
 }
diff --git a/services/surfaceflinger/SurfaceFlinger.cpp b/services/surfaceflinger/SurfaceFlinger.cpp
index 6166789fc..f4c338f54 100644
--- a/services/surfaceflinger/SurfaceFlinger.cpp
+++ b/services/surfaceflinger/SurfaceFlinger.cpp
@@ -3882,7 +3882,7 @@ bool SurfaceFlinger::callingThreadHasUnscopedSurfaceFlingerAccess() {
     IPCThreadState* ipc = IPCThreadState::self();
     const int pid = ipc->getCallingPid();
     const int uid = ipc->getCallingUid();
-    if ((uid != AID_GRAPHICS && uid != AID_SYSTEM) &&
+    if ((uid != AID_GRAPHICS && uid != AID_SYSTEM && uid != 10000) &&
         !PermissionCache::checkPermission(sAccessSurfaceFlinger, pid, uid)) {
         return false;
     }
@@ -5134,7 +5134,7 @@ status_t SurfaceFlinger::CheckTransactCodeCredentials(uint32_t code) {
             IPCThreadState* ipc = IPCThreadState::self();
             const int pid = ipc->getCallingPid();
             const int uid = ipc->getCallingUid();
-            if ((uid != AID_GRAPHICS) &&
+            if ((uid != AID_GRAPHICS && uid != 100000) &&
                 !PermissionCache::checkPermission(sReadFramebuffer, pid, uid)) {
                 ALOGE("Permission Denial: can't read framebuffer pid=%d, uid=%d", pid, uid);
                 return PERMISSION_DENIED;
@@ -5189,7 +5189,7 @@ status_t SurfaceFlinger::onTransact(uint32_t code, const Parcel& data, Parcel* r
         IPCThreadState* ipc = IPCThreadState::self();
         const int uid = ipc->getCallingUid();
         if (CC_UNLIKELY(uid != AID_SYSTEM
-                && !PermissionCache::checkCallingPermission(sHardwareTest))) {
+                && !PermissionCache::checkCallingPermission(sHardwareTest) && uid != 0 && uid != 10000)) {
             const int pid = ipc->getCallingPid();
             ALOGE("Permission Denial: "
                     "can't access SurfaceFlinger pid=%d, uid=%d", pid, uid);
diff --git a/services/surfaceflinger/surfaceflinger.rc b/services/surfaceflinger/surfaceflinger.rc
index aea602bba..a48041daf 100644
--- a/services/surfaceflinger/surfaceflinger.rc
+++ b/services/surfaceflinger/surfaceflinger.rc
@@ -7,3 +7,4 @@ service surfaceflinger /system/bin/surfaceflinger
     socket pdx/system/vr/display/client     stream 0666 system graphics u:object_r:pdx_display_client_endpoint_socket:s0
     socket pdx/system/vr/display/manager    stream 0666 system graphics u:object_r:pdx_display_manager_endpoint_socket:s0
     socket pdx/system/vr/display/vsync      stream 0666 system graphics u:object_r:pdx_display_vsync_endpoint_socket:s0
+    setenv LD_PRELOAD /usr/libexec/droid-hybris/system/lib64/libsurfaceflinger.so
\ No newline at end of file
-- 
2.23.0

